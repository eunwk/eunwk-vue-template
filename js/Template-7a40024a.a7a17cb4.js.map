{"version":3,"file":"js/Template-7a40024a.a7a17cb4.js","mappings":"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ACA,SACA,OACA,OACA,QACA,QACA,aACA,OACA,QACA,OACA,UACA,MACA,SACA,WACA,SACA,SACA,MACA,QACA,QACA,QAIA,WACA,QACA,QACA,SACA,SACA,OACA,SACA,WAEIC,EAAW,CACf,OACA,QACA,OACA,YACA,MACA,YAGIgD,EAAQ,CACZ,OACA,WACA,SACA,OACA,OACA,SACA,SACA,SACA,WACA,UACA,QACA,SACA,MACA,MACA,UACA,UACA,QACA,UACA,OACA,UACA,eACA,aACA,aACA,YACA,cACA,cACA,eACA,QACA,aACA,oBACA,cACA,gBACA,iBACA,UAGIC,EAAc,CAClB,YACA,gBACA,aACA,iBACA,cACA,YACA,YAGIC,EAAmB,CACvB,cACA,aACA,gBACA,eAEA,UACA,UAEA,OACA,WACA,QACA,aACA,WACA,YACA,qBACA,YACA,qBACA,SACA,YAGIC,EAAqB,CACzB,YACA,OACA,QACA,UACA,SACA,WACA,eACA,SACA,UAGIC,EAAY,GAAGzG,OACnBuG,EACAC,EACAH,EACAC,GAaF,SAASI,EAAanG,GACpB,MAAMoG,EAAmB,CACvB,MACA,SAEIC,EAAkB,CACtB,MACA,KACA,KACA,OAEIC,EAAkB,CACtB,OACA,SACA,QACA,OACA,KACA,OACA,MACA,KACA,KACA,OACA,OAEIC,EAAqB,CACzB,MACA,QACA,MACA,WACA,UAEIC,EAAaC,GAChBC,IAAQD,EAAKE,SAASD,GACnBE,EAAa,CACjBhF,QAASiB,EAASpD,OAAO6G,GAAiBO,OAAOL,EAAUD,IAC3DzE,QAASgB,EAASrD,OAAO4G,GACzBxE,SAAUqE,EAAUzG,OAAO2G,IAEvBU,EAAc,2BACd9C,EAAQ,CACZtD,UAAW,QACXN,MAAO,MACPU,IAAK,KACLO,SAAUuF,GAEN1C,EAAc,CAClBlE,EAAK+G,mBACL/G,EAAKsB,QAAQtB,EAAKsE,cAAe,CAC/BX,OAAQ,CACN7C,IAAK,WACLK,UAAW,KAGf,CACET,UAAW,SACXG,SAAU,CACR,CACET,MAAO,MACPU,IAAK,MACLX,SAAU,CAACH,EAAKgB,mBAElB,CACEZ,MAAO,IACPU,IAAK,IACLX,SAAU,CAACH,EAAKgB,mBAElB,CACEZ,MAAO,MACPU,IAAK,MACLX,SAAU,CACRH,EAAKgB,iBACLgD,IAGJ,CACE5D,MAAO,IACPU,IAAK,IACLX,SAAU,CACRH,EAAKgB,iBACLgD,MAKR,CACEtD,UAAW,SACXG,SAAU,CACR,CACET,MAAO,MACPU,IAAK,MACLX,SAAU,CACR6D,EACAhE,EAAK0D,oBAGT,CACEtD,MAAO,sBACPe,UAAW,GAEb,CAGEf,MAAO,8CAIb,CACEA,MAAO,IAAM0G,GAEf,CACEtC,YAAa,aACbP,cAAc,EACd7B,YAAY,EACZvB,SAAU,CACR,CACET,MAAO,MACPU,IAAK,OAEP,CACEV,MAAO,IACPU,IAAK,QAKbkD,EAAM7D,SAAW+D,EAEjB,MAAM8C,EAAQhH,EAAKsB,QAAQtB,EAAKwB,WAAY,CAC1CpB,MAAO0G,IAEHG,EAAqB,0BACrBC,EAAS,CACbxG,UAAW,SACXN,MAAO,YACP+B,aAAa,EAGbhC,SAAU,CAAC,CACTC,MAAO,KACPU,IAAK,KACLO,SAAUuF,EACVzG,SAAU,CAAC,QAAQV,OAAOyE,MAI9B,MAAO,CACL7B,KAAM,eACNC,QAAS,CACP,SACA,OACA,QAEFjB,SAAUuF,EACV7F,QAAS,OACTZ,SAAU+D,EAAYzE,OAAO,CAC3BO,EAAKE,QAAQ,MAAO,OACpBF,EAAK0D,kBACL,CACEhD,UAAW,WACXN,MAAO,QAAU0G,EAAc,YAAcG,EAC7CnG,IAAK,QACLqB,aAAa,EACbhC,SAAU,CACR6G,EACAE,IAGJ,CAEE9G,MAAO,aACPe,UAAW,EACXhB,SAAU,CAAC,CACTO,UAAW,WACXN,MAAO6G,EACPnG,IAAK,QACLqB,aAAa,EACbhC,SAAU,CAAC+G,MAGf,CACExG,UAAW,QACXuB,cAAe,QACfnB,IAAK,IACLC,QAAS,YACTZ,SAAU,CACR,CACE8B,cAAe,UACf2B,gBAAgB,EAChB7C,QAAS,YACTZ,SAAU,CAAC6G,IAEbA,IAGJ,CACE5G,MAAO0G,EAAc,IACrBhG,IAAK,IACLqB,aAAa,EACbgF,WAAW,EACXhG,UAAW,KAInB,CAEAwB,EAAOH,QAAU2D,C","sources":["webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/c.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/cal.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/capnproto.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/ceylon.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/clean.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/clojure-repl.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/clojure.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/cmake.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/coffeescript.js"],"sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: C\nCategory: common, system\nWebsite: https://en.wikipedia.org/wiki/C_(programming_language)\n*/\n\n/** @type LanguageFn */\nfunction c(hljs) {\n  // added for historic reasons because `hljs.C_LINE_COMMENT_MODE` does\n  // not include such support nor can we be sure all the grammars depending\n  // on it would desire this behavior\n  const C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$', {\n    contains: [\n      {\n        begin: /\\\\\\n/\n      }\n    ]\n  });\n  const DECLTYPE_AUTO_RE = 'decltype\\\\(auto\\\\)';\n  const NAMESPACE_RE = '[a-zA-Z_]\\\\w*::';\n  const TEMPLATE_ARGUMENT_RE = '<[^<>]+>';\n  const FUNCTION_TYPE_RE = '(' +\n    DECLTYPE_AUTO_RE + '|' +\n    optional(NAMESPACE_RE) +\n    '[a-zA-Z_]\\\\w*' + optional(TEMPLATE_ARGUMENT_RE) +\n  ')';\n  const CPP_PRIMITIVE_TYPES = {\n    className: 'keyword',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  // https://en.cppreference.com/w/cpp/language/escape\n  // \\\\ \\x \\xFF \\u2837 \\u00323747 \\374\n  const CHARACTER_ESCAPES = '\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)';\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '(u8?|U|L)?\\'(' + CHARACTER_ESCAPES + \"|.)\",\n        end: '\\'',\n        illegal: '.'\n      },\n      hljs.END_SAME_AS_BEGIN({\n        begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\(/,\n        end: /\\)([^()\\\\ ]{0,16})\"/\n      })\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(0b[01\\']+)'\n      },\n      {\n        begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)'\n      },\n      {\n        begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)'\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/,\n    end: /$/,\n    keywords: {\n      'meta-keyword':\n        'if else elif endif define undef warning error line ' +\n        'pragma _Pragma ifdef ifndef include'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      hljs.inherit(STRINGS, {\n        className: 'meta-string'\n      }),\n      {\n        className: 'meta-string',\n        begin: /<.*?>/\n      },\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const TITLE_MODE = {\n    className: 'title',\n    begin: optional(NAMESPACE_RE) + hljs.IDENT_RE,\n    relevance: 0\n  };\n\n  const FUNCTION_TITLE = optional(NAMESPACE_RE) + hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  const CPP_KEYWORDS = {\n    keyword: 'int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof ' +\n      'dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace ' +\n      'unsigned long volatile static protected bool template mutable if public friend ' +\n      'do goto auto void enum else break extern using asm case typeid wchar_t ' +\n      'short reinterpret_cast|10 default double register explicit signed typename try this ' +\n      'switch continue inline delete alignas alignof constexpr consteval constinit decltype ' +\n      'concept co_await co_return co_yield requires ' +\n      'noexcept static_assert thread_local restrict final override ' +\n      'atomic_bool atomic_char atomic_schar ' +\n      'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +\n      'atomic_ullong new throw return ' +\n      'and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq',\n    built_in: 'std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream ' +\n      'auto_ptr deque list queue stack vector map set pair bitset multiset multimap unordered_set ' +\n      'unordered_map unordered_multiset unordered_multimap priority_queue make_pair array shared_ptr abort terminate abs acos ' +\n      'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp ' +\n      'fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper ' +\n      'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow ' +\n      'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp ' +\n      'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan ' +\n      'vfprintf vprintf vsprintf endl initializer_list unique_ptr _Bool complex _Complex imaginary _Imaginary',\n    literal: 'true false nullptr NULL'\n  };\n\n  const EXPRESSION_CONTAINS = [\n    PREPROCESSOR,\n    CPP_PRIMITIVE_TYPES,\n    C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  const EXPRESSION_CONTEXT = {\n    // This mode covers expression context where we can't expect a function\n    // definition and shouldn't highlight anything that looks like one:\n    // `return some()`, `else if()`, `(x*sum(1, 2))`\n    variants: [\n      {\n        begin: /=/,\n        end: /;/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        beginKeywords: 'new throw return else',\n        end: /;/\n      }\n    ],\n    keywords: CPP_KEYWORDS,\n    contains: EXPRESSION_CONTAINS.concat([\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([ 'self' ]),\n        relevance: 0\n      }\n    ]),\n    relevance: 0\n  };\n\n  const FUNCTION_DECLARATION = {\n    className: 'function',\n    begin: '(' + FUNCTION_TYPE_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n    returnBegin: true,\n    end: /[{;=]/,\n    excludeEnd: true,\n    keywords: CPP_KEYWORDS,\n    illegal: /[^\\w\\s\\*&:<>.]/,\n    contains: [\n      { // to prevent it from being confused as the function title\n        begin: DECLTYPE_AUTO_RE,\n        keywords: CPP_KEYWORDS,\n        relevance: 0\n      },\n      {\n        begin: FUNCTION_TITLE,\n        returnBegin: true,\n        contains: [ TITLE_MODE ],\n        relevance: 0\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: CPP_KEYWORDS,\n        relevance: 0,\n        contains: [\n          C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          STRINGS,\n          NUMBERS,\n          CPP_PRIMITIVE_TYPES,\n          // Count matching parentheses.\n          {\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              'self',\n              C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES\n            ]\n          }\n        ]\n      },\n      CPP_PRIMITIVE_TYPES,\n      C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      PREPROCESSOR\n    ]\n  };\n\n  return {\n    name: \"C\",\n    aliases: [\n      'h'\n    ],\n    keywords: CPP_KEYWORDS,\n    // Until differentiations are added between `c` and `cpp`, `c` will\n    // not be auto-detected to avoid auto-detect conflicts between C and C++\n    disableAutodetect: true,\n    illegal: '</',\n    contains: [].concat(\n      EXPRESSION_CONTEXT,\n      FUNCTION_DECLARATION,\n      EXPRESSION_CONTAINS,\n      [\n        PREPROCESSOR,\n        { // containers: ie, `vector <int> rooms (9);`\n          begin: '\\\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\\\s*<',\n          end: '>',\n          keywords: CPP_KEYWORDS,\n          contains: [\n            'self',\n            CPP_PRIMITIVE_TYPES\n          ]\n        },\n        {\n          begin: hljs.IDENT_RE + '::',\n          keywords: CPP_KEYWORDS\n        },\n        {\n          className: 'class',\n          beginKeywords: 'enum class struct union',\n          end: /[{;:<>=]/,\n          contains: [\n            {\n              beginKeywords: \"final class struct\"\n            },\n            hljs.TITLE_MODE\n          ]\n        }\n      ]),\n    exports: {\n      preprocessor: PREPROCESSOR,\n      strings: STRINGS,\n      keywords: CPP_KEYWORDS\n    }\n  };\n}\n\nmodule.exports = c;\n","/*\nLanguage: C/AL\nAuthor: Kenneth Fuglsang Christensen <kfuglsang@gmail.com>\nDescription: Provides highlighting of Microsoft Dynamics NAV C/AL code files\nWebsite: https://docs.microsoft.com/en-us/dynamics-nav/programming-in-c-al\n*/\n\n/** @type LanguageFn */\nfunction cal(hljs) {\n  const KEYWORDS =\n    'div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to ' +\n    'until while with var';\n  const LITERALS = 'false true';\n  const COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(\n      /\\{/,\n      /\\}/,\n      {\n        relevance: 0\n      }\n    ),\n    hljs.COMMENT(\n      /\\(\\*/,\n      /\\*\\)/,\n      {\n        relevance: 10\n      }\n    )\n  ];\n  const STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/,\n    contains: [{\n      begin: /''/\n    }]\n  };\n  const CHAR_STRING = {\n    className: 'string',\n    begin: /(#\\d+)+/\n  };\n  const DATE = {\n    className: 'number',\n    begin: '\\\\b\\\\d+(\\\\.\\\\d+)?(DT|D|T)',\n    relevance: 0\n  };\n  const DBL_QUOTED_VARIABLE = {\n    className: 'string', // not a string technically but makes sense to be highlighted in the same style\n    begin: '\"',\n    end: '\"'\n  };\n\n  const PROCEDURE = {\n    className: 'function',\n    beginKeywords: 'procedure',\n    end: /[:;]/,\n    keywords: 'procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [\n          STRING,\n          CHAR_STRING\n        ]\n      }\n    ].concat(COMMENT_MODES)\n  };\n\n  const OBJECT = {\n    className: 'class',\n    begin: 'OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\\\d+) ([^\\\\r\\\\n]+)',\n    returnBegin: true,\n    contains: [\n      hljs.TITLE_MODE,\n      PROCEDURE\n    ]\n  };\n\n  return {\n    name: 'C/AL',\n    case_insensitive: true,\n    keywords: {\n      keyword: KEYWORDS,\n      literal: LITERALS\n    },\n    illegal: /\\/\\*/,\n    contains: [\n      STRING,\n      CHAR_STRING,\n      DATE,\n      DBL_QUOTED_VARIABLE,\n      hljs.NUMBER_MODE,\n      OBJECT,\n      PROCEDURE\n    ]\n  };\n}\n\nmodule.exports = cal;\n","/*\nLanguage: Cap’n Proto\nAuthor: Oleg Efimov <efimovov@gmail.com>\nDescription: Cap’n Proto message definition format\nWebsite: https://capnproto.org/capnp-tool.html\nCategory: protocols\n*/\n\n/** @type LanguageFn */\nfunction capnproto(hljs) {\n  return {\n    name: 'Cap’n Proto',\n    aliases: ['capnp'],\n    keywords: {\n      keyword:\n        'struct enum interface union group import using const annotation extends in of on as with from fixed',\n      built_in:\n        'Void Bool Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32 Float64 ' +\n        'Text Data AnyPointer AnyStruct Capability List',\n      literal:\n        'true false'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'meta',\n        begin: /@0x[\\w\\d]{16};/,\n        illegal: /\\n/\n      },\n      {\n        className: 'symbol',\n        begin: /@\\d+\\b/\n      },\n      {\n        className: 'class',\n        beginKeywords: 'struct enum',\n        end: /\\{/,\n        illegal: /\\n/,\n        contains: [hljs.inherit(hljs.TITLE_MODE, {\n          starts: {\n            endsWithParent: true,\n            excludeEnd: true\n          } // hack: eating everything after the first title\n        })]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'interface',\n        end: /\\{/,\n        illegal: /\\n/,\n        contains: [hljs.inherit(hljs.TITLE_MODE, {\n          starts: {\n            endsWithParent: true,\n            excludeEnd: true\n          } // hack: eating everything after the first title\n        })]\n      }\n    ]\n  };\n}\n\nmodule.exports = capnproto;\n","/*\nLanguage: Ceylon\nAuthor: Lucas Werkmeister <mail@lucaswerkmeister.de>\nWebsite: https://ceylon-lang.org\n*/\n\n/** @type LanguageFn */\nfunction ceylon(hljs) {\n  // 2.3. Identifiers and keywords\n  const KEYWORDS =\n    'assembly module package import alias class interface object given value ' +\n    'assign void function new of extends satisfies abstracts in out return ' +\n    'break continue throw assert dynamic if else switch case for while try ' +\n    'catch finally then let this outer super is exists nonempty';\n  // 7.4.1 Declaration Modifiers\n  const DECLARATION_MODIFIERS =\n    'shared abstract formal default actual variable late native deprecated ' +\n    'final sealed annotation suppressWarnings small';\n  // 7.4.2 Documentation\n  const DOCUMENTATION =\n    'doc by license see throws tagged';\n  const SUBST = {\n    className: 'subst',\n    excludeBegin: true,\n    excludeEnd: true,\n    begin: /``/,\n    end: /``/,\n    keywords: KEYWORDS,\n    relevance: 10\n  };\n  const EXPRESSIONS = [\n    {\n      // verbatim string\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    },\n    {\n      // string literal or template\n      className: 'string',\n      begin: '\"',\n      end: '\"',\n      contains: [SUBST]\n    },\n    {\n      // character literal\n      className: 'string',\n      begin: \"'\",\n      end: \"'\"\n    },\n    {\n      // numeric literal\n      className: 'number',\n      begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n      relevance: 0\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  return {\n    name: 'Ceylon',\n    keywords: {\n      keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,\n      meta: DOCUMENTATION\n    },\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\n        contains: ['self']\n      }),\n      {\n        // compiler annotation\n        className: 'meta',\n        begin: '@[a-z]\\\\w*(?::\"[^\"]*\")?'\n      }\n    ].concat(EXPRESSIONS)\n  };\n}\n\nmodule.exports = ceylon;\n","/*\nLanguage: Clean\nAuthor: Camil Staps <info@camilstaps.nl>\nCategory: functional\nWebsite: http://clean.cs.ru.nl\n*/\n\n/** @type LanguageFn */\nfunction clean(hljs) {\n  return {\n    name: 'Clean',\n    aliases: [\n      'icl',\n      'dcl'\n    ],\n    keywords: {\n      keyword:\n        'if let in with where case of class instance otherwise ' +\n        'implementation definition system module from import qualified as ' +\n        'special code inline foreign export ccall stdcall generic derive ' +\n        'infix infixl infixr',\n      built_in:\n        'Int Real Char Bool',\n      literal:\n        'True False'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      { // relevance booster\n        begin: '->|<-[|:]?|#!?|>>=|\\\\{\\\\||\\\\|\\\\}|:==|=:|<>'\n      }\n    ]\n  };\n}\n\nmodule.exports = clean;\n","/*\nLanguage: Clojure REPL\nDescription: Clojure REPL sessions\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nRequires: clojure.js\nWebsite: https://clojure.org\nCategory: lisp\n*/\n\n/** @type LanguageFn */\nfunction clojureRepl(hljs) {\n  return {\n    name: 'Clojure REPL',\n    contains: [\n      {\n        className: 'meta',\n        begin: /^([\\w.-]+|\\s*#_)?=>/,\n        starts: {\n          end: /$/,\n          subLanguage: 'clojure'\n        }\n      }\n    ]\n  };\n}\n\nmodule.exports = clojureRepl;\n","/*\nLanguage: Clojure\nDescription: Clojure syntax (based on lisp.js)\nAuthor: mfornos\nWebsite: https://clojure.org\nCategory: lisp\n*/\n\n/** @type LanguageFn */\nfunction clojure(hljs) {\n  const SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n  const SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n  const globals = 'def defonce defprotocol defstruct defmulti defmethod defn- defn defmacro deftype defrecord';\n  const keywords = {\n    $pattern: SYMBOL_RE,\n    'builtin-name':\n      // Clojure keywords\n      globals + ' ' +\n      'cond apply if-not if-let if not not= =|0 <|0 >|0 <=|0 >=|0 ==|0 +|0 /|0 *|0 -|0 rem ' +\n      'quot neg? pos? delay? symbol? keyword? true? false? integer? empty? coll? list? ' +\n      'set? ifn? fn? associative? sequential? sorted? counted? reversible? number? decimal? ' +\n      'class? distinct? isa? float? rational? reduced? ratio? odd? even? char? seq? vector? ' +\n      'string? map? nil? contains? zero? instance? not-every? not-any? libspec? -> ->> .. . ' +\n      'inc compare do dotimes mapcat take remove take-while drop letfn drop-last take-last ' +\n      'drop-while while intern condp case reduced cycle split-at split-with repeat replicate ' +\n      'iterate range merge zipmap declare line-seq sort comparator sort-by dorun doall nthnext ' +\n      'nthrest partition eval doseq await await-for let agent atom send send-off release-pending-sends ' +\n      'add-watch mapv filterv remove-watch agent-error restart-agent set-error-handler error-handler ' +\n      'set-error-mode! error-mode shutdown-agents quote var fn loop recur throw try monitor-enter ' +\n      'monitor-exit macroexpand macroexpand-1 for dosync and or ' +\n      'when when-not when-let comp juxt partial sequence memoize constantly complement identity assert ' +\n      'peek pop doto proxy first rest cons cast coll last butlast ' +\n      'sigs reify second ffirst fnext nfirst nnext meta with-meta ns in-ns create-ns import ' +\n      'refer keys select-keys vals key val rseq name namespace promise into transient persistent! conj! ' +\n      'assoc! dissoc! pop! disj! use class type num float double short byte boolean bigint biginteger ' +\n      'bigdec print-method print-dup throw-if printf format load compile get-in update-in pr pr-on newline ' +\n      'flush read slurp read-line subvec with-open memfn time re-find re-groups rand-int rand mod locking ' +\n      'assert-valid-fdecl alias resolve ref deref refset swap! reset! set-validator! compare-and-set! alter-meta! ' +\n      'reset-meta! commute get-validator alter ref-set ref-history-count ref-min-history ref-max-history ensure sync io! ' +\n      'new next conj set! to-array future future-call into-array aset gen-class reduce map filter find empty ' +\n      'hash-map hash-set sorted-map sorted-map-by sorted-set sorted-set-by vec vector seq flatten reverse assoc dissoc list ' +\n      'disj get union difference intersection extend extend-type extend-protocol int nth delay count concat chunk chunk-buffer ' +\n      'chunk-append chunk-first chunk-rest max min dec unchecked-inc-int unchecked-inc unchecked-dec-inc unchecked-dec unchecked-negate ' +\n      'unchecked-add-int unchecked-add unchecked-subtract-int unchecked-subtract chunk-next chunk-cons chunked-seq? prn vary-meta ' +\n      'lazy-seq spread list* str find-keyword keyword symbol gensym force rationalize'\n  };\n\n  const SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\n  const SYMBOL = {\n    begin: SYMBOL_RE,\n    relevance: 0\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: SIMPLE_NUMBER_RE,\n    relevance: 0\n  };\n  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    illegal: null\n  });\n  const COMMENT = hljs.COMMENT(\n    ';',\n    '$',\n    {\n      relevance: 0\n    }\n  );\n  const LITERAL = {\n    className: 'literal',\n    begin: /\\b(true|false|nil)\\b/\n  };\n  const COLLECTION = {\n    begin: '[\\\\[\\\\{]',\n    end: '[\\\\]\\\\}]'\n  };\n  const HINT = {\n    className: 'comment',\n    begin: '\\\\^' + SYMBOL_RE\n  };\n  const HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n  const KEY = {\n    className: 'symbol',\n    begin: '[:]{1,2}' + SYMBOL_RE\n  };\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)'\n  };\n  const BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  const NAME = {\n    keywords: keywords,\n    className: 'name',\n    begin: SYMBOL_RE,\n    relevance: 0,\n    starts: BODY\n  };\n  const DEFAULT_CONTAINS = [\n    LIST,\n    STRING,\n    HINT,\n    HINT_COL,\n    COMMENT,\n    KEY,\n    COLLECTION,\n    NUMBER,\n    LITERAL,\n    SYMBOL\n  ];\n\n  const GLOBAL = {\n    beginKeywords: globals,\n    lexemes: SYMBOL_RE,\n    end: '(\\\\[|#|\\\\d|\"|:|\\\\{|\\\\)|\\\\(|$)',\n    contains: [\n      {\n        className: 'title',\n        begin: SYMBOL_RE,\n        relevance: 0,\n        excludeEnd: true,\n        // we can only have a single title\n        endsParent: true\n      }\n    ].concat(DEFAULT_CONTAINS)\n  };\n\n  LIST.contains = [\n    hljs.COMMENT('comment', ''),\n    GLOBAL,\n    NAME,\n    BODY\n  ];\n  BODY.contains = DEFAULT_CONTAINS;\n  COLLECTION.contains = DEFAULT_CONTAINS;\n  HINT_COL.contains = [ COLLECTION ];\n\n  return {\n    name: 'Clojure',\n    aliases: [ 'clj' ],\n    illegal: /\\S/,\n    contains: [\n      LIST,\n      STRING,\n      HINT,\n      HINT_COL,\n      COMMENT,\n      KEY,\n      COLLECTION,\n      NUMBER,\n      LITERAL\n    ]\n  };\n}\n\nmodule.exports = clojure;\n","/*\nLanguage: CMake\nDescription: CMake is an open-source cross-platform system for build automation.\nAuthor: Igor Kalnitsky <igor@kalnitsky.org>\nWebsite: https://cmake.org\n*/\n\n/** @type LanguageFn */\nfunction cmake(hljs) {\n  return {\n    name: 'CMake',\n    aliases: ['cmake.in'],\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        // scripting commands\n        'break cmake_host_system_information cmake_minimum_required cmake_parse_arguments ' +\n        'cmake_policy configure_file continue elseif else endforeach endfunction endif endmacro ' +\n        'endwhile execute_process file find_file find_library find_package find_path ' +\n        'find_program foreach function get_cmake_property get_directory_property ' +\n        'get_filename_component get_property if include include_guard list macro ' +\n        'mark_as_advanced math message option return separate_arguments ' +\n        'set_directory_properties set_property set site_name string unset variable_watch while ' +\n        // project commands\n        'add_compile_definitions add_compile_options add_custom_command add_custom_target ' +\n        'add_definitions add_dependencies add_executable add_library add_link_options ' +\n        'add_subdirectory add_test aux_source_directory build_command create_test_sourcelist ' +\n        'define_property enable_language enable_testing export fltk_wrap_ui ' +\n        'get_source_file_property get_target_property get_test_property include_directories ' +\n        'include_external_msproject include_regular_expression install link_directories ' +\n        'link_libraries load_cache project qt_wrap_cpp qt_wrap_ui remove_definitions ' +\n        'set_source_files_properties set_target_properties set_tests_properties source_group ' +\n        'target_compile_definitions target_compile_features target_compile_options ' +\n        'target_include_directories target_link_directories target_link_libraries ' +\n        'target_link_options target_sources try_compile try_run ' +\n        // CTest commands\n        'ctest_build ctest_configure ctest_coverage ctest_empty_binary_directory ctest_memcheck ' +\n        'ctest_read_custom_files ctest_run_script ctest_sleep ctest_start ctest_submit ' +\n        'ctest_test ctest_update ctest_upload ' +\n        // deprecated commands\n        'build_name exec_program export_library_dependencies install_files install_programs ' +\n        'install_targets load_command make_directory output_required_files remove ' +\n        'subdir_depends subdirs use_mangled_mesa utility_source variable_requires write_file ' +\n        'qt5_use_modules qt5_use_package qt5_wrap_cpp ' +\n        // core keywords\n        'on off true false and or not command policy target test exists is_newer_than ' +\n        'is_directory is_symlink is_absolute matches less greater equal less_equal ' +\n        'greater_equal strless strgreater strequal strless_equal strgreater_equal version_less ' +\n        'version_greater version_equal version_less_equal version_greater_equal in_list defined'\n    },\n    contains: [\n      {\n        className: 'variable',\n        begin: /\\$\\{/,\n        end: /\\}/\n      },\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = cmake;\n","const KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\",\n  \"BigInt64Array\",\n  \"BigUint64Array\",\n  \"BigInt\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  BUILT_IN_VARIABLES,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: CoffeeScript\nAuthor: Dmytrii Nagirniak <dnagir@gmail.com>\nContributors: Oleg Efimov <efimovov@gmail.com>, Cédric Néhémie <cedric.nehemie@gmail.com>\nDescription: CoffeeScript is a programming language that transcompiles to JavaScript. For info about language see http://coffeescript.org/\nCategory: common, scripting\nWebsite: https://coffeescript.org\n*/\n\n/** @type LanguageFn */\nfunction coffeescript(hljs) {\n  const COFFEE_BUILT_INS = [\n    'npm',\n    'print'\n  ];\n  const COFFEE_LITERALS = [\n    'yes',\n    'no',\n    'on',\n    'off'\n  ];\n  const COFFEE_KEYWORDS = [\n    'then',\n    'unless',\n    'until',\n    'loop',\n    'by',\n    'when',\n    'and',\n    'or',\n    'is',\n    'isnt',\n    'not'\n  ];\n  const NOT_VALID_KEYWORDS = [\n    \"var\",\n    \"const\",\n    \"let\",\n    \"function\",\n    \"static\"\n  ];\n  const excluding = (list) =>\n    (kw) => !list.includes(kw);\n  const KEYWORDS$1 = {\n    keyword: KEYWORDS.concat(COFFEE_KEYWORDS).filter(excluding(NOT_VALID_KEYWORDS)),\n    literal: LITERALS.concat(COFFEE_LITERALS),\n    built_in: BUILT_INS.concat(COFFEE_BUILT_INS)\n  };\n  const JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS$1\n  };\n  const EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    hljs.inherit(hljs.C_NUMBER_MODE, {\n      starts: {\n        end: '(\\\\s*/)?',\n        relevance: 0\n      }\n    }), // a number tries to eat the following slash to prevent treating it as a regexp\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/,\n          end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/,\n          end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/,\n          end: /\"\"\"/,\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ]\n        },\n        {\n          begin: /\"/,\n          end: /\"/,\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ]\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '///',\n          end: '///',\n          contains: [\n            SUBST,\n            hljs.HASH_COMMENT_MODE\n          ]\n        },\n        {\n          begin: '//[gim]{0,3}(?=\\\\W)',\n          relevance: 0\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *]).*?(?![\\\\]).\\/[gim]{0,3}(?=\\W)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE // relevance booster\n    },\n    {\n      subLanguage: 'javascript',\n      excludeBegin: true,\n      excludeEnd: true,\n      variants: [\n        {\n          begin: '```',\n          end: '```'\n        },\n        {\n          begin: '`',\n          end: '`'\n        }\n      ]\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  const TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  const POSSIBLE_PARAMS_RE = '(\\\\(.*\\\\)\\\\s*)?\\\\B[-=]>';\n  const PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]',\n    returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/,\n      end: /\\)/,\n      keywords: KEYWORDS$1,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n\n  return {\n    name: 'CoffeeScript',\n    aliases: [\n      'coffee',\n      'cson',\n      'iced'\n    ],\n    keywords: KEYWORDS$1,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('###', '###'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + POSSIBLE_PARAMS_RE,\n        end: '[-=]>',\n        returnBegin: true,\n        contains: [\n          TITLE,\n          PARAMS\n        ]\n      },\n      {\n        // anonymous function start\n        begin: /[:\\(,=]\\s*/,\n        relevance: 0,\n        contains: [{\n          className: 'function',\n          begin: POSSIBLE_PARAMS_RE,\n          end: '[-=]>',\n          returnBegin: true,\n          contains: [PARAMS]\n        }]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':',\n        end: ':',\n        returnBegin: true,\n        returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n}\n\nmodule.exports = coffeescript;\n"],"names":["source","re","optional","concat","args","joined","map","x","join","c","hljs","C_LINE_COMMENT_MODE","COMMENT","contains","begin","DECLTYPE_AUTO_RE","NAMESPACE_RE","TEMPLATE_ARGUMENT_RE","FUNCTION_TYPE_RE","CPP_PRIMITIVE_TYPES","className","CHARACTER_ESCAPES","STRINGS","variants","end","illegal","BACKSLASH_ESCAPE","END_SAME_AS_BEGIN","NUMBERS","relevance","PREPROCESSOR","keywords","inherit","C_BLOCK_COMMENT_MODE","TITLE_MODE","IDENT_RE","FUNCTION_TITLE","CPP_KEYWORDS","keyword","built_in","literal","EXPRESSION_CONTAINS","EXPRESSION_CONTEXT","beginKeywords","FUNCTION_DECLARATION","returnBegin","excludeEnd","name","aliases","disableAutodetect","exports","preprocessor","strings","module","cal","KEYWORDS","LITERALS","COMMENT_MODES","STRING","CHAR_STRING","DATE","DBL_QUOTED_VARIABLE","PROCEDURE","OBJECT","case_insensitive","NUMBER_MODE","capnproto","QUOTE_STRING_MODE","HASH_COMMENT_MODE","starts","endsWithParent","ceylon","DECLARATION_MODIFIERS","DOCUMENTATION","SUBST","excludeBegin","EXPRESSIONS","meta","clean","APOS_STRING_MODE","C_NUMBER_MODE","clojureRepl","subLanguage","clojure","SYMBOLSTART","SYMBOL_RE","globals","$pattern","SIMPLE_NUMBER_RE","SYMBOL","NUMBER","LITERAL","COLLECTION","HINT","HINT_COL","KEY","LIST","BODY","NAME","DEFAULT_CONTAINS","GLOBAL","lexemes","endsParent","cmake","TYPES","ERROR_TYPES","BUILT_IN_GLOBALS","BUILT_IN_VARIABLES","BUILT_INS","coffeescript","COFFEE_BUILT_INS","COFFEE_LITERALS","COFFEE_KEYWORDS","NOT_VALID_KEYWORDS","excluding","list","kw","includes","KEYWORDS$1","filter","JS_IDENT_RE","BINARY_NUMBER_MODE","TITLE","POSSIBLE_PARAMS_RE","PARAMS","returnEnd"],"sourceRoot":""}