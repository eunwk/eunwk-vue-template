{"version":3,"file":"js/Template-f3845ee8.af544340.js","mappings":"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","sources":["webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/go.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/golo.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/gradle.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/groovy.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/haml.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/handlebars.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/haskell.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/haxe.js","webpack://vue2-vuetify2/./node_modules/highlight.js/lib/languages/hsp.js"],"sourcesContent":["/*\nLanguage: Go\nAuthor: Stephan Kountso aka StepLg <steplg@gmail.com>\nContributors: Evgeny Stepanischev <imbolk@gmail.com>\nDescription: Google go language (golang). For info about language\nWebsite: http://golang.org/\nCategory: common, system\n*/\n\nfunction go(hljs) {\n  const GO_KEYWORDS = {\n    keyword:\n      'break default func interface select case map struct chan else goto package switch ' +\n      'const fallthrough if range type continue for import return var go defer ' +\n      'bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 ' +\n      'uint16 uint32 uint64 int uint uintptr rune',\n    literal:\n       'true false iota nil',\n    built_in:\n      'append cap close complex copy imag len make new panic print println real recover delete'\n  };\n  return {\n    name: 'Go',\n    aliases: ['golang'],\n    keywords: GO_KEYWORDS,\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        variants: [\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          {\n            begin: '`',\n            end: '`'\n          }\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n          {\n            begin: hljs.C_NUMBER_RE + '[i]',\n            relevance: 1\n          },\n          hljs.C_NUMBER_MODE\n        ]\n      },\n      {\n        begin: /:=/ // relevance booster\n      },\n      {\n        className: 'function',\n        beginKeywords: 'func',\n        end: '\\\\s*(\\\\{|$)',\n        excludeEnd: true,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            keywords: GO_KEYWORDS,\n            illegal: /[\"']/\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = go;\n","/*\nLanguage: Golo\nAuthor: Philippe Charriere <ph.charriere@gmail.com>\nDescription: a lightweight dynamic language for the JVM\nWebsite: http://golo-lang.org/\n*/\n\nfunction golo(hljs) {\n  return {\n    name: 'Golo',\n    keywords: {\n      keyword:\n          'println readln print import module function local return let var ' +\n          'while for foreach times in case when match with break continue ' +\n          'augment augmentation each find filter reduce ' +\n          'if then else otherwise try catch finally raise throw orIfNull ' +\n          'DynamicObject|10 DynamicVariable struct Observable map set vector list array',\n      literal:\n          'true false null'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta',\n        begin: '@[A-Za-z]+'\n      }\n    ]\n  };\n}\n\nmodule.exports = golo;\n","/*\nLanguage: Gradle\nDescription: Gradle is an open-source build automation tool focused on flexibility and performance.\nWebsite: https://gradle.org\nAuthor: Damian Mee <mee.damian@gmail.com>\n*/\n\nfunction gradle(hljs) {\n  return {\n    name: 'Gradle',\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'task project allprojects subprojects artifacts buildscript configurations ' +\n        'dependencies repositories sourceSets description delete from into include ' +\n        'exclude source classpath destinationDir includes options sourceCompatibility ' +\n        'targetCompatibility group flatDir doLast doFirst flatten todir fromdir ant ' +\n        'def abstract break case catch continue default do else extends final finally ' +\n        'for if implements instanceof native new private protected public return static ' +\n        'switch synchronized throw throws transient try volatile while strictfp package ' +\n        'import false null super this true antlrtask checkstyle codenarc copy boolean ' +\n        'byte char class double float int interface long short void compile runTime ' +\n        'file fileTree abs any append asList asWritable call collect compareTo count ' +\n        'div dump each eachByte eachFile eachLine every find findAll flatten getAt ' +\n        'getErr getIn getOut getText grep immutable inject inspect intersect invokeMethods ' +\n        'isCase join leftShift minus multiply newInputStream newOutputStream newPrintWriter ' +\n        'newReader newWriter next plus pop power previous print println push putAt read ' +\n        'readBytes readLines reverse reverseEach round size sort splitEachLine step subMap ' +\n        'times toInteger toList tokenize upto waitForOrKill withPrintWriter withReader ' +\n        'withStream withWriter withWriterAppend write writeLine'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.REGEXP_MODE\n\n    ]\n  };\n}\n\nmodule.exports = gradle;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\n Language: Groovy\n Author: Guillaume Laforge <glaforge@gmail.com>\n Description: Groovy programming language implementation inspired from Vsevolod's Java mode\n Website: https://groovy-lang.org\n */\n\nfunction variants(variants, obj = {}) {\n  obj.variants = variants;\n  return obj;\n}\n\nfunction groovy(hljs) {\n  const IDENT_RE = '[A-Za-z0-9_$]+';\n  const COMMENT = variants([\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(\n      '/\\\\*\\\\*',\n      '\\\\*/',\n      {\n        relevance: 0,\n        contains: [\n          {\n            // eat up @'s in emails to prevent them to be recognized as doctags\n            begin: /\\w+@/,\n            relevance: 0\n          },\n          {\n            className: 'doctag',\n            begin: '@[A-Za-z]+'\n          }\n        ]\n      }\n    )\n  ]);\n  const REGEXP = {\n    className: 'regexp',\n    begin: /~?\\/[^\\/\\n]+\\//,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const NUMBER = variants([\n    hljs.BINARY_NUMBER_MODE,\n    hljs.C_NUMBER_MODE\n  ]);\n  const STRING = variants([\n    {\n      begin: /\"\"\"/,\n      end: /\"\"\"/\n    },\n    {\n      begin: /'''/,\n      end: /'''/\n    },\n    {\n      begin: \"\\\\$/\",\n      end: \"/\\\\$\",\n      relevance: 10\n    },\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ],\n  {\n    className: \"string\"\n  }\n  );\n\n  return {\n    name: 'Groovy',\n    keywords: {\n      built_in: 'this super',\n      literal: 'true false null',\n      keyword:\n            'byte short char int long boolean float double void ' +\n            // groovy specific keywords\n            'def as in assert trait ' +\n            // common keywords with Java\n            'abstract static volatile transient public private protected synchronized final ' +\n            'class interface enum if else for while switch case break default continue ' +\n            'throw throws try catch finally implements extends new import package return instanceof'\n    },\n    contains: [\n      hljs.SHEBANG({\n        binary: \"groovy\",\n        relevance: 10\n      }),\n      COMMENT,\n      STRING,\n      REGEXP,\n      NUMBER,\n      {\n        className: 'class',\n        beginKeywords: 'class interface trait enum',\n        end: /\\{/,\n        illegal: ':',\n        contains: [\n          {\n            beginKeywords: 'extends implements'\n          },\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '@[A-Za-z]+',\n        relevance: 0\n      },\n      {\n        // highlight map keys and named parameters as attrs\n        className: 'attr',\n        begin: IDENT_RE + '[ \\t]*:',\n        relevance: 0\n      },\n      {\n        // catch middle element of the ternary operator\n        // to avoid highlight it as a label, named parameter, or map key\n        begin: /\\?/,\n        end: /:/,\n        relevance: 0,\n        contains: [\n          COMMENT,\n          STRING,\n          REGEXP,\n          NUMBER,\n          'self'\n        ]\n      },\n      {\n        // highlight labeled statements\n        className: 'symbol',\n        begin: '^[ \\t]*' + lookahead(IDENT_RE + ':'),\n        excludeBegin: true,\n        end: IDENT_RE + ':',\n        relevance: 0\n      }\n    ],\n    illegal: /#|<\\//\n  };\n}\n\nmodule.exports = groovy;\n","/*\nLanguage: HAML\nRequires: ruby.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://haml.info\nCategory: template\n*/\n\n// TODO support filter tags like :javascript, support inline HTML\nfunction haml(hljs) {\n  return {\n    name: 'HAML',\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '^!!!( (5|1\\\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\\\b.*))?$',\n        relevance: 10\n      },\n      // FIXME these comments should be allowed to span indented lines\n      hljs.COMMENT(\n        '^\\\\s*(!=#|=#|-#|/).*$',\n        false,\n        {\n          relevance: 0\n        }\n      ),\n      {\n        begin: '^\\\\s*(-|=|!=)(?!#)',\n        starts: {\n          end: '\\\\n',\n          subLanguage: 'ruby'\n        }\n      },\n      {\n        className: 'tag',\n        begin: '^\\\\s*%',\n        contains: [\n          {\n            className: 'selector-tag',\n            begin: '\\\\w+'\n          },\n          {\n            className: 'selector-id',\n            begin: '#[\\\\w-]+'\n          },\n          {\n            className: 'selector-class',\n            begin: '\\\\.[\\\\w-]+'\n          },\n          {\n            begin: /\\{\\s*/,\n            end: /\\s*\\}/,\n            contains: [\n              {\n                begin: ':\\\\w+\\\\s*=>',\n                end: ',\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: ':\\\\w+'\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            begin: '\\\\(\\\\s*',\n            end: '\\\\s*\\\\)',\n            excludeEnd: true,\n            contains: [\n              {\n                begin: '\\\\w+\\\\s*=',\n                end: '\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: '\\\\w+',\n                    relevance: 0\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: '^\\\\s*[=~]\\\\s*'\n      },\n      {\n        begin: /#\\{/,\n        starts: {\n          end: /\\}/,\n          subLanguage: 'ruby'\n        }\n      }\n    ]\n  };\n}\n\nmodule.exports = haml;\n","/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(', re, ')*');\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction optional(re) {\n  return concat('(', re, ')?');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: Handlebars\nRequires: xml.js\nAuthor: Robin Ward <robin.ward@gmail.com>\nDescription: Matcher for Handlebars as well as EmberJS additions.\nWebsite: https://handlebarsjs.com\nCategory: template\n*/\n\nfunction handlebars(hljs) {\n  const BUILT_INS = {\n    'builtin-name': [\n      'action',\n      'bindattr',\n      'collection',\n      'component',\n      'concat',\n      'debugger',\n      'each',\n      'each-in',\n      'get',\n      'hash',\n      'if',\n      'in',\n      'input',\n      'link-to',\n      'loc',\n      'log',\n      'lookup',\n      'mut',\n      'outlet',\n      'partial',\n      'query-params',\n      'render',\n      'template',\n      'textarea',\n      'unbound',\n      'unless',\n      'view',\n      'with',\n      'yield'\n    ]\n  };\n\n  const LITERALS = {\n    literal: [\n      'true',\n      'false',\n      'undefined',\n      'null'\n    ]\n  };\n\n  // as defined in https://handlebarsjs.com/guide/expressions.html#literal-segments\n  // this regex matches literal segments like ' abc ' or [ abc ] as well as helpers and paths\n  // like a/b, ./abc/cde, and abc.bcd\n\n  const DOUBLE_QUOTED_ID_REGEX = /\"\"|\"[^\"]+\"/;\n  const SINGLE_QUOTED_ID_REGEX = /''|'[^']+'/;\n  const BRACKET_QUOTED_ID_REGEX = /\\[\\]|\\[[^\\]]+\\]/;\n  const PLAIN_ID_REGEX = /[^\\s!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]+/;\n  const PATH_DELIMITER_REGEX = /(\\.|\\/)/;\n  const ANY_ID = either(\n    DOUBLE_QUOTED_ID_REGEX,\n    SINGLE_QUOTED_ID_REGEX,\n    BRACKET_QUOTED_ID_REGEX,\n    PLAIN_ID_REGEX\n    );\n\n  const IDENTIFIER_REGEX = concat(\n    optional(/\\.|\\.\\/|\\//), // relative or absolute path\n    ANY_ID,\n    anyNumberOfTimes(concat(\n      PATH_DELIMITER_REGEX,\n      ANY_ID\n    ))\n  );\n\n  // identifier followed by a equal-sign (without the equal sign)\n  const HASH_PARAM_REGEX = concat(\n    '(',\n    BRACKET_QUOTED_ID_REGEX, '|',\n    PLAIN_ID_REGEX,\n    ')(?==)'\n  );\n\n  const HELPER_NAME_OR_PATH_EXPRESSION = {\n    begin: IDENTIFIER_REGEX,\n    lexemes: /[\\w.\\/]+/\n  };\n\n  const HELPER_PARAMETER = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    keywords: LITERALS\n  });\n\n  const SUB_EXPRESSION = {\n    begin: /\\(/,\n    end: /\\)/\n    // the \"contains\" is added below when all necessary sub-modes are defined\n  };\n\n  const HASH = {\n    // fka \"attribute-assignment\", parameters of the form 'key=value'\n    className: 'attr',\n    begin: HASH_PARAM_REGEX,\n    relevance: 0,\n    starts: {\n      begin: /=/,\n      end: /=/,\n      starts: {\n        contains: [\n          hljs.NUMBER_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          HELPER_PARAMETER,\n          SUB_EXPRESSION\n        ]\n      }\n    }\n  };\n\n  const BLOCK_PARAMS = {\n    // parameters of the form '{{#with x as | y |}}...{{/with}}'\n    begin: /as\\s+\\|/,\n    keywords: {\n      keyword: 'as'\n    },\n    end: /\\|/,\n    contains: [\n      {\n        // define sub-mode in order to prevent highlighting of block-parameter named \"as\"\n        begin: /\\w+/\n      }\n    ]\n  };\n\n  const HELPER_PARAMETERS = {\n    contains: [\n      hljs.NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      BLOCK_PARAMS,\n      HASH,\n      HELPER_PARAMETER,\n      SUB_EXPRESSION\n    ],\n    returnEnd: true\n    // the property \"end\" is defined through inheritance when the mode is used. If depends\n    // on the surrounding mode, but \"endsWithParent\" does not work here (i.e. it includes the\n    // end-token of the surrounding mode)\n  };\n\n  const SUB_EXPRESSION_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    className: 'name',\n    keywords: BUILT_INS,\n    starts: hljs.inherit(HELPER_PARAMETERS, {\n      end: /\\)/\n    })\n  });\n\n  SUB_EXPRESSION.contains = [SUB_EXPRESSION_CONTENTS];\n\n  const OPENING_BLOCK_MUSTACHE_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    keywords: BUILT_INS,\n    className: 'name',\n    starts: hljs.inherit(HELPER_PARAMETERS, {\n      end: /\\}\\}/\n    })\n  });\n\n  const CLOSING_BLOCK_MUSTACHE_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    keywords: BUILT_INS,\n    className: 'name'\n  });\n\n  const BASIC_MUSTACHE_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    className: 'name',\n    keywords: BUILT_INS,\n    starts: hljs.inherit(HELPER_PARAMETERS, {\n      end: /\\}\\}/\n    })\n  });\n\n  const ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH = {\n    begin: /\\\\\\{\\{/,\n    skip: true\n  };\n  const PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH = {\n    begin: /\\\\\\\\(?=\\{\\{)/,\n    skip: true\n  };\n\n  return {\n    name: 'Handlebars',\n    aliases: [\n      'hbs',\n      'html.hbs',\n      'html.handlebars',\n      'htmlbars'\n    ],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH,\n      PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH,\n      hljs.COMMENT(/\\{\\{!--/, /--\\}\\}/),\n      hljs.COMMENT(/\\{\\{!/, /\\}\\}/),\n      {\n        // open raw block \"{{{{raw}}}} content not evaluated {{{{/raw}}}}\"\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{(?!\\/)/,\n        end: /\\}\\}\\}\\}/,\n        contains: [OPENING_BLOCK_MUSTACHE_CONTENTS],\n        starts: {\n          end: /\\{\\{\\{\\{\\//,\n          returnEnd: true,\n          subLanguage: 'xml'\n        }\n      },\n      {\n        // close raw block\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{\\//,\n        end: /\\}\\}\\}\\}/,\n        contains: [CLOSING_BLOCK_MUSTACHE_CONTENTS]\n      },\n      {\n        // open block statement\n        className: 'template-tag',\n        begin: /\\{\\{#/,\n        end: /\\}\\}/,\n        contains: [OPENING_BLOCK_MUSTACHE_CONTENTS]\n      },\n      {\n        className: 'template-tag',\n        begin: /\\{\\{(?=else\\}\\})/,\n        end: /\\}\\}/,\n        keywords: 'else'\n      },\n      {\n        className: 'template-tag',\n        begin: /\\{\\{(?=else if)/,\n        end: /\\}\\}/,\n        keywords: 'else if'\n      },\n      {\n        // closing block statement\n        className: 'template-tag',\n        begin: /\\{\\{\\//,\n        end: /\\}\\}/,\n        contains: [CLOSING_BLOCK_MUSTACHE_CONTENTS]\n      },\n      {\n        // template variable or helper-call that is NOT html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{\\{/,\n        end: /\\}\\}\\}/,\n        contains: [BASIC_MUSTACHE_CONTENTS]\n      },\n      {\n        // template variable or helper-call that is html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{/,\n        end: /\\}\\}/,\n        contains: [BASIC_MUSTACHE_CONTENTS]\n      }\n    ]\n  };\n}\n\nmodule.exports = handlebars;\n","/*\nLanguage: Haskell\nAuthor: Jeremy Hull <sourdrums@gmail.com>\nContributors: Zena Treep <zena.treep@gmail.com>\nWebsite: https://www.haskell.org\nCategory: functional\n*/\n\nfunction haskell(hljs) {\n  const COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        /\\{-/,\n        /-\\}/,\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  const PRAGMA = {\n    className: 'meta',\n    begin: /\\{-#/,\n    end: /#-\\}/\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#',\n    end: '$'\n  };\n\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n      },\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: '[_a-z][\\\\w\\']*'\n      }),\n      COMMENT\n    ]\n  };\n\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n\n  return {\n    name: 'Haskell',\n    aliases: ['hs'],\n    keywords:\n      'let in if then else case of where do module import hiding ' +\n      'qualified type data newtype deriving class instance as default ' +\n      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n      'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n      // Top-level constructions.\n      {\n        beginKeywords: 'module',\n        end: 'where',\n        keywords: 'module where',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: '\\\\bimport\\\\b',\n        end: '$',\n        keywords: 'import qualified as hiding',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b',\n        end: 'where',\n        keywords: 'class family instance where',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          COMMENT\n        ]\n      },\n      {\n        className: 'class',\n        begin: '\\\\b(data|(new)?type)\\\\b',\n        end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [\n          PRAGMA,\n          CONSTRUCTOR,\n          LIST,\n          RECORD,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'default',\n        end: '$',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'infix infixl infixr',\n        end: '$',\n        contains: [\n          hljs.C_NUMBER_MODE,\n          COMMENT\n        ]\n      },\n      {\n        begin: '\\\\bforeign\\\\b',\n        end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n                  'dotnet safe unsafe',\n        contains: [\n          CONSTRUCTOR,\n          hljs.QUOTE_STRING_MODE,\n          COMMENT\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',\n        end: '$'\n      },\n      // \"Whitespaces\".\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: '^[_a-z][\\\\w\\']*'\n      }),\n      COMMENT,\n      { // No markup, relevance booster\n        begin: '->|<-'\n      }\n    ]\n  };\n}\n\nmodule.exports = haskell;\n","/*\nLanguage: Haxe\nDescription: Haxe is an open source toolkit based on a modern, high level, strictly typed programming language.\nAuthor: Christopher Kaster <ikasoki@gmail.com> (Based on the actionscript.js language file by Alexander Myadzel)\nContributors: Kenton Hamaluik <kentonh@gmail.com>\nWebsite: https://haxe.org\n*/\n\nfunction haxe(hljs) {\n\n  const HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    name: 'Haxe',\n    aliases: ['hx'],\n    keywords: {\n      keyword: 'break case cast catch continue default do dynamic else enum extern ' +\n               'for function here if import in inline never new override package private get set ' +\n               'public return static super switch this throw trace try typedef untyped using var while ' +\n               HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      {\n        className: 'string', // interpolate-able strings\n        begin: '\\'',\n        end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst', // interpolation\n            begin: '\\\\$\\\\{',\n            end: '\\\\}'\n          },\n          {\n            className: 'subst', // interpolation\n            begin: '\\\\$',\n            end: /\\W\\}/\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta', // compiler meta\n        begin: '@:',\n        end: '$'\n      },\n      {\n        className: 'meta', // compiler conditionals\n        begin: '#',\n        end: '$',\n        keywords: {\n          'meta-keyword': 'if else elseif end error'\n        }\n      },\n      {\n        className: 'type', // function types\n        begin: ':[ \\t]*',\n        end: '[^A-Za-z0-9_ \\t\\\\->]',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        className: 'type', // types\n        begin: ':[ \\t]*',\n        end: '\\\\W',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'type', // instantiation\n        begin: 'new *',\n        end: '\\\\W',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'class', // enums\n        beginKeywords: 'enum',\n        end: '\\\\{',\n        contains: [hljs.TITLE_MODE]\n      },\n      {\n        className: 'class', // abstracts\n        beginKeywords: 'abstract',\n        end: '[\\\\{$]',\n        contains: [\n          {\n            className: 'type',\n            begin: '\\\\(',\n            end: '\\\\)',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: 'from +',\n            end: '\\\\W',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: 'to +',\n            end: '\\\\W',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: {\n          keyword: 'abstract from to'\n        }\n      },\n      {\n        className: 'class', // classes\n        begin: '\\\\b(class|interface) +',\n        end: '[\\\\{$]',\n        excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          {\n            className: 'keyword',\n            begin: '\\\\b(extends|implements) +',\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: '\\\\(',\n        excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [hljs.TITLE_MODE]\n      }\n    ],\n    illegal: /<\\//\n  };\n}\n\nmodule.exports = haxe;\n","/*\nLanguage: HSP\nAuthor: prince <MC.prince.0203@gmail.com>\nWebsite: https://en.wikipedia.org/wiki/Hot_Soup_Processor\nCategory: scripting\n*/\n\nfunction hsp(hljs) {\n  return {\n    name: 'HSP',\n    case_insensitive: true,\n    keywords: {\n      $pattern: /[\\w._]+/,\n      keyword: 'goto gosub return break repeat loop continue wait await dim sdim foreach dimtype dup dupptr end stop newmod delmod mref run exgoto on mcall assert logmes newlab resume yield onexit onerror onkey onclick oncmd exist delete mkdir chdir dirlist bload bsave bcopy memfile if else poke wpoke lpoke getstr chdpm memexpand memcpy memset notesel noteadd notedel noteload notesave randomize noteunsel noteget split strrep setease button chgdisp exec dialog mmload mmplay mmstop mci pset pget syscolor mes print title pos circle cls font sysfont objsize picload color palcolor palette redraw width gsel gcopy gzoom gmode bmpsave hsvcolor getkey listbox chkbox combox input mesbox buffer screen bgscr mouse objsel groll line clrobj boxf objprm objmode stick grect grotate gsquare gradf objimage objskip objenable celload celdiv celput newcom querycom delcom cnvstow comres axobj winobj sendmsg comevent comevarg sarrayconv callfunc cnvwtos comevdisp libptr system hspstat hspver stat cnt err strsize looplev sublev iparam wparam lparam refstr refdval int rnd strlen length length2 length3 length4 vartype gettime peek wpeek lpeek varptr varuse noteinfo instr abs limit getease str strmid strf getpath strtrim sin cos tan atan sqrt double absf expf logf limitf powf geteasef mousex mousey mousew hwnd hinstance hdc ginfo objinfo dirinfo sysinfo thismod __hspver__ __hsp30__ __date__ __time__ __line__ __file__ _debug __hspdef__ and or xor not screen_normal screen_palette screen_hide screen_fixedsize screen_tool screen_frame gmode_gdi gmode_mem gmode_rgb0 gmode_alpha gmode_rgb0alpha gmode_add gmode_sub gmode_pixela ginfo_mx ginfo_my ginfo_act ginfo_sel ginfo_wx1 ginfo_wy1 ginfo_wx2 ginfo_wy2 ginfo_vx ginfo_vy ginfo_sizex ginfo_sizey ginfo_winx ginfo_winy ginfo_mesx ginfo_mesy ginfo_r ginfo_g ginfo_b ginfo_paluse ginfo_dispx ginfo_dispy ginfo_cx ginfo_cy ginfo_intid ginfo_newid ginfo_sx ginfo_sy objinfo_mode objinfo_bmscr objinfo_hwnd notemax notesize dir_cur dir_exe dir_win dir_sys dir_cmdline dir_desktop dir_mydoc dir_tv font_normal font_bold font_italic font_underline font_strikeout font_antialias objmode_normal objmode_guifont objmode_usefont gsquare_grad msgothic msmincho do until while wend for next _break _continue switch case default swbreak swend ddim ldim alloc m_pi rad2deg deg2rad ease_linear ease_quad_in ease_quad_out ease_quad_inout ease_cubic_in ease_cubic_out ease_cubic_inout ease_quartic_in ease_quartic_out ease_quartic_inout ease_bounce_in ease_bounce_out ease_bounce_inout ease_shake_in ease_shake_out ease_shake_inout ease_loop'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n\n      {\n        // multi-line string\n        className: 'string',\n        begin: /\\{\"/,\n        end: /\"\\}/,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n\n      hljs.COMMENT(';', '$', {\n        relevance: 0\n      }),\n\n      {\n        // pre-processor\n        className: 'meta',\n        begin: '#',\n        end: '$',\n        keywords: {\n          'meta-keyword': 'addion cfunc cmd cmpopt comfunc const defcfunc deffunc define else endif enum epack func global if ifdef ifndef include modcfunc modfunc modinit modterm module pack packopt regcmd runtime undef usecom uselib'\n        },\n        contains: [\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {\n            className: 'meta-string'\n          }),\n          hljs.NUMBER_MODE,\n          hljs.C_NUMBER_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n\n      {\n        // label\n        className: 'symbol',\n        begin: '^\\\\*(\\\\w+|@)'\n      },\n\n      hljs.NUMBER_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = hsp;\n"],"names":["go","hljs","GO_KEYWORDS","keyword","literal","built_in","name","aliases","keywords","illegal","contains","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","className","variants","QUOTE_STRING_MODE","APOS_STRING_MODE","begin","end","C_NUMBER_RE","relevance","C_NUMBER_MODE","beginKeywords","excludeEnd","TITLE_MODE","module","exports","golo","HASH_COMMENT_MODE","gradle","case_insensitive","NUMBER_MODE","REGEXP_MODE","source","re","lookahead","concat","args","joined","map","x","join","obj","groovy","IDENT_RE","COMMENT","REGEXP","BACKSLASH_ESCAPE","NUMBER","BINARY_NUMBER_MODE","STRING","SHEBANG","binary","UNDERSCORE_TITLE_MODE","excludeBegin","haml","starts","subLanguage","returnBegin","endsWithParent","anyNumberOfTimes","optional","either","handlebars","BUILT_INS","LITERALS","DOUBLE_QUOTED_ID_REGEX","SINGLE_QUOTED_ID_REGEX","BRACKET_QUOTED_ID_REGEX","PLAIN_ID_REGEX","PATH_DELIMITER_REGEX","ANY_ID","IDENTIFIER_REGEX","HASH_PARAM_REGEX","HELPER_NAME_OR_PATH_EXPRESSION","lexemes","HELPER_PARAMETER","inherit","SUB_EXPRESSION","HASH","BLOCK_PARAMS","HELPER_PARAMETERS","returnEnd","SUB_EXPRESSION_CONTENTS","OPENING_BLOCK_MUSTACHE_CONTENTS","CLOSING_BLOCK_MUSTACHE_CONTENTS","BASIC_MUSTACHE_CONTENTS","ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH","skip","PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH","haskell","PRAGMA","PREPROCESSOR","CONSTRUCTOR","LIST","RECORD","haxe","HAXE_BASIC_TYPES","hsp","$pattern"],"sourceRoot":""}